# Usage:
# ansible-playbook -i 'localhost,' workstation.yml --ask-become-pass 2>&1 | tee -a provision.log
---
- name: Setup workstation
  gather_facts: yes
  connection: local
  hosts: 127.0.0.1
  vars:
    go_version: "1.17.4"
  tasks:

    - set_fact:
        ansible_python_interpreter: "/usr/bin/python3"
    
    - name: Install general packages
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - apt-transport-https
          - aptitude
          - curl
          - deja-dup
          - git
          - htop
          - jq
          - keepass2
          - mlocate
          - vim
          - wget
          - xdotool

# ================== Fonts ================== #

    - name: Create .fonts folder
      file:
        state: directory
        path: ~/.fonts
        mode: '0755'

    - name: Download MesloLGS NF Regular font
      get_url:
        url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf
        dest: ~/.fonts/MesloLGS_NF_Regular.ttf
        mode: '0660'
        force: yes
    
    - name: Download MesloLGS NF Regular Bold font
      get_url:
        url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf
        dest: ~/.fonts/MesloLGS_NF_Regular_Bold.ttf
        mode: '0660'
        force: yes

    - name: Download MesloLGS NF Regular Italic font
      get_url:
        url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf
        dest: ~/.fonts/MesloLGS_NF_Regular_Italic.ttf
        mode: '0660'
        force: yes

    - name: Download MesloLGS NF Regular Italic font
      get_url:
        url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf
        dest: ~/.fonts/MesloLGS_NF_Regular_Bold_Italic.ttf
        mode: '0660'
        force: yes

    - name: Update font cache
      shell: fc-cache -f -v

# ================== Powerline fonts for zsh (oh my zsh) ================== #

    - name: Install Powerline Fonts
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - fonts-powerline

# ================== zsh (oh my zsh) ================== #

    - name: Installing zsh
      become: yes
      apt: 
        name: zsh
        state: latest

    - name: Cloning oh-my-zsh
      git:
        repo=https://github.com/robbyrussell/oh-my-zsh
        dest=~/.oh-my-zsh

    - name: Downloading ~/.zshrc
      copy:
        src: ../../zsh/.zshrc
        dest: "/home/{{ ansible_user_id }}/.zshrc"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0644
        force: yes

    - name: Get zsh path
      command: which zsh
      register: zsh_path

    - name: Set user shell
      become: yes
      user:
        name: "{{ ansible_user_id }}"
        shell: "{{ zsh_path.stdout }}"

# ================== oh-my-zsh plugins ================== #

    - name: Install thefuck
      pip:
        name: thefuck
        state: present

    - name: Install zsh-autosuggestions
      git:
        repo=https://github.com/zsh-users/zsh-autosuggestions
        dest=~/.oh-my-zsh/custom/plugins/zsh-autosuggestions

    - name: Install zsh-syntax-highlighting
      git:
        repo=https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest=~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting

# ================== Visual Studio Code ================== #

    - name: Install Visual Studio Code repository key
      become: yes
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Add Visual Studio Code repository to sources list
      become: yes
      apt_repository:
        repo: deb https://packages.microsoft.com/repos/code stable main
        state: present
        filename: vscode

    - name: Install Visual Studio Code
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - code

    - name: Install vscode extensions
      ansible.builtin.shell: "../../vscode/install.sh"

# ================== Google Chrome ================== #

    - name: Install Google Chrome browser repository key
      become: yes
      apt_key:
        url: https://dl.google.com/linux/linux_signing_key.pub
        state: present

    - name: Add Google Chrome browser repository to sources list
      become: yes
      apt_repository:
        repo: deb https://dl.google.com/linux/chrome/deb/ stable main
        state: present
        filename: google-chrome

    - name: Install Google Chrome browser
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - google-chrome-stable

# ================== Google Cloud SDK ================== #

    - name: Add the Cloud SDK repository key
      become: yes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Google Cloud SDK repository to sources list
      become: yes
      apt_repository:
        repo: deb https://packages.cloud.google.com/apt cloud-sdk main
        state: present
        filename: google-cloud-sdk

    - name: Install Google Cloud SDK
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - google-cloud-sdk

# ================== Terragrunt ================== #

    - name: Install jmespath
      pip:
        name: jmespath
        state: present
        extra_args: --user

    - name: Get latest Terragrunt version metadata
      uri:
        status_code: 200
        url: https://api.github.com/repos/gruntwork-io/terragrunt/releases/latest
      register: terragrunt_metadata

    - name: Download Terragrunt
      become: yes
      get_url:
        url: "{{ item.browser_download_url }}"
        dest: /usr/local/bin/terragrunt
        mode: '0771'
        force: yes
      loop: "{{ terragrunt_metadata.json.assets }}"
      when: item.name == "terragrunt_linux_amd64"

# ================== kubectl ================== #

    - name: Install kubectl repository key
      become: yes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add kubectl repository to sources list
      become: yes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes

    - name: Install kubectl
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - kubectl

# ================== Docker ================== #

    - name: Install Docker
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - docker.io
          - docker-compose
          - docker-doc

    - name: Enable and start docker daemon
      become: yes
      systemd:
        name: docker
        enabled: yes
        state: started
    
    - name: Setting username variable
      set_fact:
        username: "{{ ansible_user_id }}"

    - name: Add user to docker group
      become: yes
      user:
        append: yes
        groups: 
          - docker
        name: "{{ username }}"

# ================== Golang ================== #

    - name: Remove go binary
      become: yes
      file:
        path: /usr/local/go
        state: absent

    - name: Download go
      get_url:
        url: https://golang.org/dl/go{{go_version}}.linux-amd64.tar.gz
        dest: /tmp/go{{go_version}}.linux-amd64.tar.gz
        mode: 0440

    - name: Extract go archive into /usr/local
      become: yes
      unarchive:
        src: /tmp/go{{go_version}}.linux-amd64.tar.gz
        dest: /usr/local
        remote_src: yes

    - name: Add go to PATH
      become: yes
      lineinfile:
        path: "/home/{{username}}/.zshrc"
        state: present
        line: export PATH=$PATH:/usr/local/go/bin

# ================== Helm ================== #

    - name: Install helm repository key
      become: yes
      apt_key:
        url: https://baltocdn.com/helm/signing.asc
        state: present

    - name: Add helm repository to sources list
      become: yes
      apt_repository:
        repo: deb https://baltocdn.com/helm/stable/debian/ all main
        state: present
        filename: helm

    - name: Install helm
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - helm

# ================== Minikube ================== #

    - name: Install xz-utils (dependency of apt deb module)
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - xz-utils

    - name: Downloads and installs minikube deb package
      become: yes
      apt:
        state: present
        deb: https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb

# ================== asdf ================== #

    - name: clone asdf
      ansible.builtin.git:
        repo: 'https://github.com/asdf-vm/asdf.git'
        dest: ~/.asdf

# ================== language support ================== #

    - name: Check language support
      ansible.builtin.shell: "check-language-support"
      register: languages

    - name: Create language list
      set_fact: 
        lang_list: "{{ languages.stdout.split(' ') }}"
    
    - name: Install language support
      become: yes
      apt:
        state: present
        update_cache: yes
        name: "{{ lang_list }}"
      when: languages.stdout != ""

# ================== Complete ================== #

    - debug:
        msg: Please reboot your workstation to complete setup.
